// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    10.4b/841621 Production Release
//  HLS Date:       Thu Oct 24 17:20:07 PDT 2019
// 
//  Generated by:   billyk@cad.eecs.harvard.edu
//  Generated date: Fri Apr 17 23:10:12 2020
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push_core
// ------------------------------------------------------------------


module Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push_core
    (
  this_val, this_rdy, this_msg, m_valids_rsc_dat, m_data_rsc_dat, ccs_ccore_start_rsc_dat,
      ccs_ccore_done_sync_vld, ccs_MIO_clk, ccs_MIO_arst
);
  output this_val;
  reg this_val;
  input this_rdy;
  output [71:0] this_msg;
  input [7:0] m_valids_rsc_dat;
  input [63:0] m_data_rsc_dat;
  input ccs_ccore_start_rsc_dat;
  output ccs_ccore_done_sync_vld;
  input ccs_MIO_clk;
  input ccs_MIO_arst;


  // Interconnect Declarations
  wire [7:0] m_valids_rsci_idat;
  wire [63:0] m_data_rsci_idat;
  wire ccs_ccore_start_rsci_idat;
  reg wm_val_Marshall_72U_for_8_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_8_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_7_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_7_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_6_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_6_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_5_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_5_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_4_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_4_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_3_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_3_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_2_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_2_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1;
  reg wm_val_Marshall_72U_for_1_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1;
  reg [7:0] wm_val_Marshall_72U_for_1_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_2;
  wire and_dcpl_5;
  reg io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1;
  wire and_cse;
  wire or_5_cse;
  reg [7:0] m_valids_buf_lpi_1_dfm;
  reg [63:0] m_data_buf_lpi_1_dfm;
  wire this_val_mx0c1;
  wire [7:0] m_valids_buf_lpi_1_dfm_mx0;
  wire [63:0] m_data_buf_lpi_1_dfm_mx0;
  wire and_6_cse;


  // Interconnect Declarations for Component Instantiations 
  wire [0:0] nl_ccs_ccore_done_synci_ivld;
  assign nl_ccs_ccore_done_synci_ivld = io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1
      & this_rdy;
  ccs_in_v1 #(.rscid(32'sd228),
  .width(32'sd8)) m_valids_rsci (
      .dat(m_valids_rsc_dat),
      .idat(m_valids_rsci_idat)
    );
  ccs_in_v1 #(.rscid(32'sd229),
  .width(32'sd64)) m_data_rsci (
      .dat(m_data_rsc_dat),
      .idat(m_data_rsci_idat)
    );
  ccs_in_v1 #(.rscid(32'sd320),
  .width(32'sd1)) ccs_ccore_start_rsci (
      .dat(ccs_ccore_start_rsc_dat),
      .idat(ccs_ccore_start_rsci_idat)
    );
  ccs_sync_out_vld_v1 #(.rscid(32'sd331)) ccs_ccore_done_synci (
      .vld(ccs_ccore_done_sync_vld),
      .ivld(nl_ccs_ccore_done_synci_ivld[0:0])
    );
  assign this_msg = {wm_val_Marshall_72U_for_8_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_8_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_7_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_7_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_6_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_6_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_5_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_5_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_4_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_4_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_3_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_3_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_2_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_2_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
      , wm_val_Marshall_72U_for_1_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
      , wm_val_Marshall_72U_for_1_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_2};
  assign and_6_cse = (this_rdy | (~ io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1))
      & ccs_ccore_start_rsci_idat;
  assign or_5_cse = ccs_ccore_start_rsci_idat | and_cse;
  assign m_valids_buf_lpi_1_dfm_mx0 = MUX_v_8_2_2(m_valids_rsci_idat, m_valids_buf_lpi_1_dfm,
      and_cse);
  assign m_data_buf_lpi_1_dfm_mx0 = MUX_v_64_2_2(m_data_rsci_idat, m_data_buf_lpi_1_dfm,
      and_cse);
  assign and_cse = io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1 & (~ this_rdy);
  assign and_dcpl_5 = ~((~((~ io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1) | this_rdy))
      | ccs_ccore_start_rsci_idat);
  assign this_val_mx0c1 = io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1 & this_rdy
      & (~ ccs_ccore_start_rsci_idat);
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      this_val <= 1'b0;
    end
    else if ( or_5_cse | this_val_mx0c1 ) begin
      this_val <= ~ this_val_mx0c1;
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_8_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_8_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[7];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_8_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_8_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[63:56];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_7_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_7_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[6];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_7_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_7_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[55:48];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_6_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_6_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[5];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_6_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_6_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[47:40];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_5_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_5_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[4];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_5_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_5_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[39:32];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_4_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_4_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[3];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_4_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_4_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[31:24];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_3_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_3_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[2];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_3_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_3_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[23:16];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_2_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_2_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[1];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_2_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_2_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_1
          <= m_data_buf_lpi_1_dfm_mx0[15:8];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_1_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= 1'b0;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_1_type_to_vector_bool_1_slc_this_write_msg_wm_val_valids_1_0_1
          <= m_valids_buf_lpi_1_dfm_mx0[0];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      wm_val_Marshall_72U_for_1_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_2
          <= 8'b00000000;
    end
    else if ( ~ and_dcpl_5 ) begin
      wm_val_Marshall_72U_for_1_to_sc_8_v_slc_this_write_msg_wm_val_data_8_7_0_2
          <= m_data_buf_lpi_1_dfm_mx0[7:0];
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      m_valids_buf_lpi_1_dfm <= 8'b00000000;
      m_data_buf_lpi_1_dfm <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( and_6_cse ) begin
      m_valids_buf_lpi_1_dfm <= m_valids_buf_lpi_1_dfm_mx0;
      m_data_buf_lpi_1_dfm <= m_data_buf_lpi_1_dfm_mx0;
    end
  end
  always @(posedge ccs_MIO_clk or negedge ccs_MIO_arst) begin
    if ( ~ ccs_MIO_arst ) begin
      io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1 <= 1'b0;
    end
    else begin
      io_read_ccs_ccore_start_rsc_sft_lpi_1_dfm_1 <= or_5_cse;
    end
  end

  function automatic [63:0] MUX_v_64_2_2;
    input [63:0] input_0;
    input [63:0] input_1;
    input [0:0] sel;
    reg [63:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_64_2_2 = result;
  end
  endfunction


  function automatic [7:0] MUX_v_8_2_2;
    input [7:0] input_0;
    input [7:0] input_1;
    input [0:0] sel;
    reg [7:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_8_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push
// ------------------------------------------------------------------


module Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push
    (
  this_val, this_rdy, this_msg, m_valids_rsc_dat, m_data_rsc_dat, ccs_ccore_start_rsc_dat,
      ccs_ccore_done_sync_vld, ccs_MIO_clk, ccs_MIO_arst
);
  output this_val;
  input this_rdy;
  output [71:0] this_msg;
  input [7:0] m_valids_rsc_dat;
  input [63:0] m_data_rsc_dat;
  input ccs_ccore_start_rsc_dat;
  output ccs_ccore_done_sync_vld;
  input ccs_MIO_clk;
  input ccs_MIO_arst;



  // Interconnect Declarations for Component Instantiations 
  Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push_core
      Connections_Combinational_ArbitratedScratchpad_InputSetup_InputType_256U_8U_8U_0U_rsp_t_Connections_SYN_PORT_Push_core_inst
      (
      .this_val(this_val),
      .this_rdy(this_rdy),
      .this_msg(this_msg),
      .m_valids_rsc_dat(m_valids_rsc_dat),
      .m_data_rsc_dat(m_data_rsc_dat),
      .ccs_ccore_start_rsc_dat(ccs_ccore_start_rsc_dat),
      .ccs_ccore_done_sync_vld(ccs_ccore_done_sync_vld),
      .ccs_MIO_clk(ccs_MIO_clk),
      .ccs_MIO_arst(ccs_MIO_arst)
    );
endmodule



